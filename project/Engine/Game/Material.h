#pragma once

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------
//* engine
#include <Engine/System/DxObject/DxBufferResource.h>

//* lib
#include <lib/Geometry/Vector2.h>
#include <lib/Geometry/Matrix4x4.h>

//* c++
#include <memory>

//* imgui
#include <imgui.h>

////////////////////////////////////////////////////////////////////////////////////////////
// PBRMaterial structure
////////////////////////////////////////////////////////////////////////////////////////////
struct PBRMaterial {

	//=========================================================================================
	// member
	//=========================================================================================

	float roughness;
	float metallic;

	//=========================================================================================
	// methods
	//=========================================================================================

	PBRMaterial()
		: roughness(0.0f), metallic(0.0f) {
	}

	void SetImGuiCommand() {
		ImGui::DragFloat("roughness", &roughness, 0.01f, 0.0f, 1.0f);
		ImGui::DragFloat("metallic",  &metallic,  0.01f, 0.0f, 1.0f);
	}

};

////////////////////////////////////////////////////////////////////////////////////////////
// PBRMaterialBuffer class
////////////////////////////////////////////////////////////////////////////////////////////
class PBRMaterialBuffer {
public:

	//=========================================================================================
	// public methods
	//=========================================================================================

	PBRMaterialBuffer()  = default;
	~PBRMaterialBuffer() { Term(); }

	void Create();

	void Term();

	void Transfer();

	void SetImGuiCommand();

	//* getter *//

	const D3D12_GPU_VIRTUAL_ADDRESS GetGPUVirtualAddress() const;

	//=========================================================================================
	// public variables
	//=========================================================================================

	PBRMaterial material;

private:

	//=========================================================================================
	// private variables
	//=========================================================================================

	std::unique_ptr<DxObject::BufferResource<PBRMaterial>> buffer_;

};