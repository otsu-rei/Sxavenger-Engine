#pragma once

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------
//* base
#include <Engine/Beta/BaseBehavior.h>

//* lib
#include <Lib/Geometry/Vector3.h>

//* c++
#include <vector>

////////////////////////////////////////////////////////////////////////////////////////////
// Rail class
////////////////////////////////////////////////////////////////////////////////////////////
class Rail
	: public BaseBehavior {
public:

	//=========================================================================================
	// public methods
	//=========================================================================================

	Rail()  = default;
	~Rail() = default;

	void Init();

	void Term();

	void Draw();

	void SetAttributeImGui() override;

	//* getter *//

	const std::vector<Vector3f>& GetPoints() const { return points_; }

private:

	//=========================================================================================
	// private variables
	//=========================================================================================

	//* member *//

	std::vector<Vector3f> points_;

	//=========================================================================================
	// private methods
	//=========================================================================================

	void DrawCatmullrom(uint32_t kSubdivision);

};